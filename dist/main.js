/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_example__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/example */ \"./src/scripts/example.js\");\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchHorrorMovies();\n  const main = document.getElementById('main');\n  new _scripts_example__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main);\n});\n\n// async function fetchMovie() {\n//     const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0468569/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167260/'];\n//     const options = {\n//       method: 'GET',\n//       headers: {\n//         'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n//         'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n//       }\n//     };\n\n//     try {\n//       const response = await fetch(urls, options);\n//       const result = await response.json();\n//       console.log(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\nasync function fetchActionMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0468569/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167260/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1375666/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0120737/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167261/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0133093/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0080684/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt10189514/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0076759/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0103064/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchAdventureMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167260/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1375666/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0120737/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0060196/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167261/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0080684/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0816692/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0076759/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0245429/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0172495/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchAnimationMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0245429/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0110357/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0095327/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt4633694/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt5311514/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0910970/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt2380307/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0119698/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0114709/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1049413/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchBiographyMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0108052/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0099685/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0253474/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1675434/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt8503618/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt5074352/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt6316138/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0112573/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0086879/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0056172/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchComedyMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0118799/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0088763/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1675434/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt4633694/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt2380307/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0057012/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1187043/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0114709/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0211915/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1049413/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchCrimeMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0068646/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0468569/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0071562/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0110912/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0099685/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0102926/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0114369/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0120689/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0317248/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0407887/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchDramaMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0111161/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0068646/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0468569/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0071562/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0108052/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0167260/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0110912/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0137523/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0120737/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0109830/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchFamilyMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0245429/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0110357/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt4633694/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0910970/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt2380307/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0986264/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0114709/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1049413/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0435761/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0266543/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchHistoryMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0108052/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt8503618/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt6316138/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0112573/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0363163/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0057115/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt8291224/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt2119532/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt2024544/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0395169/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchHorrorMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0054215/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0078748/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0081505/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt8239946/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0084787/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0056687/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt3461252/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0070047/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0063522/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0365748/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function fetchMusicalMovies() {\n  const urls = ['https://moviesminidatabase.p.rapidapi.com/movie/id/tt0110357/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt8503618/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0066763/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt1562872/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0367110/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0059742/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0169102/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0103639/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0101414/', 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0067093/'];\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n      'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n    }\n  };\n  try {\n    const requests = urls.map(url => fetch(url, options));\n    const responses = await Promise.all(requests);\n    const results = await Promise.all(responses.map(response => response.json()));\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/example.js":
/*!********************************!*\
  !*** ./src/scripts/example.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Example {\n  constructor(htmlElement) {\n    this.htmlElement = htmlElement;\n    this.htmlElement.innerHTML = \"<h1>It's ALIVE!!!</h1>\";\n    this.handleClick = this.handleClick.bind(this);\n    this.htmlElement.addEventListener('click', this.handleClick);\n  }\n  handleClick() {\n    this.htmlElement.children[0].innerText = \"Ouch\";\n  }\n}\n// const url = 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0111161/cast/';\n// const options = {\n// \tmethod: 'GET',\n// \theaders: {\n// \t\t'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n// \t\t'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n// \t}\n// };\n\n// try {\n// \tconst response = await fetch(url, options);\n// \tconst result = await response.json();\n// \tconsole.log(result);\n// } catch (error) {\n// \tconsole.error(error);\n// }\n\n// async function fetchMovieCast() {\n//     const url = 'https://moviesminidatabase.p.rapidapi.com/movie/id/tt0111161/cast/';\n//     const options = {\n//       method: 'GET',\n//       headers: {\n//         'X-RapidAPI-Key': 'acd4d417f3msh22cbb2688691676p165cfcjsn3f566e20b85c',\n//         'X-RapidAPI-Host': 'moviesminidatabase.p.rapidapi.com'\n//       }\n//     };\n\n//     try {\n//       const response = await fetch(url, options);\n//       const result = await response.text();\n//       console.log(result);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Example);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leGFtcGxlLmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLENBQUM7RUFDVkMsV0FBV0EsQ0FBQ0MsV0FBVyxFQUFFO0lBQ3JCLElBQUksQ0FBQ0EsV0FBVyxHQUFHQSxXQUFXO0lBQzlCLElBQUksQ0FBQ0EsV0FBVyxDQUFDQyxTQUFTLEdBQUcsd0JBQXdCO0lBRXJELElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUksQ0FBQ0EsV0FBVyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQzlDLElBQUksQ0FBQ0gsV0FBVyxDQUFDSSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDRixXQUFXLENBQUM7RUFDaEU7RUFHQUEsV0FBV0EsQ0FBQSxFQUFHO0lBQ1YsSUFBSSxDQUFDRixXQUFXLENBQUNLLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsU0FBUyxHQUFHLE1BQU07RUFDbkQ7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0EsK0RBQWVSLE9BQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0cHJvamVjdC8uL3NyYy9zY3JpcHRzL2V4YW1wbGUuanM/ZmNlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBFeGFtcGxlIHtcbiAgICBjb25zdHJ1Y3RvcihodG1sRWxlbWVudCkge1xuICAgICAgICB0aGlzLmh0bWxFbGVtZW50ID0gaHRtbEVsZW1lbnRcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5pbm5lckhUTUwgPSBcIjxoMT5JdCdzIEFMSVZFISEhPC9oMT5cIlxuXG4gICAgICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcylcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGFuZGxlQ2xpY2spXG4gICAgfVxuXG5cbiAgICBoYW5kbGVDbGljaygpIHtcbiAgICAgICAgdGhpcy5odG1sRWxlbWVudC5jaGlsZHJlblswXS5pbm5lclRleHQgPSBcIk91Y2hcIlxuICAgIH1cbiAgICBcbn1cbi8vIGNvbnN0IHVybCA9ICdodHRwczovL21vdmllc21pbmlkYXRhYmFzZS5wLnJhcGlkYXBpLmNvbS9tb3ZpZS9pZC90dDAxMTExNjEvY2FzdC8nO1xuLy8gY29uc3Qgb3B0aW9ucyA9IHtcbi8vIFx0bWV0aG9kOiAnR0VUJyxcbi8vIFx0aGVhZGVyczoge1xuLy8gXHRcdCdYLVJhcGlkQVBJLUtleSc6ICdhY2Q0ZDQxN2YzbXNoMjJjYmIyNjg4NjkxNjc2cDE2NWNmY2pzbjNmNTY2ZTIwYjg1YycsXG4vLyBcdFx0J1gtUmFwaWRBUEktSG9zdCc6ICdtb3ZpZXNtaW5pZGF0YWJhc2UucC5yYXBpZGFwaS5jb20nXG4vLyBcdH1cbi8vIH07XG5cbi8vIHRyeSB7XG4vLyBcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbi8vIFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuLy8gXHRjb25zb2xlLmxvZyhyZXN1bHQpO1xuLy8gfSBjYXRjaCAoZXJyb3IpIHtcbi8vIFx0Y29uc29sZS5lcnJvcihlcnJvcik7XG4vLyB9XG5cbi8vIGFzeW5jIGZ1bmN0aW9uIGZldGNoTW92aWVDYXN0KCkge1xuLy8gICAgIGNvbnN0IHVybCA9ICdodHRwczovL21vdmllc21pbmlkYXRhYmFzZS5wLnJhcGlkYXBpLmNvbS9tb3ZpZS9pZC90dDAxMTExNjEvY2FzdC8nO1xuLy8gICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4vLyAgICAgICBtZXRob2Q6ICdHRVQnLFxuLy8gICAgICAgaGVhZGVyczoge1xuLy8gICAgICAgICAnWC1SYXBpZEFQSS1LZXknOiAnYWNkNGQ0MTdmM21zaDIyY2JiMjY4ODY5MTY3NnAxNjVjZmNqc24zZjU2NmUyMGI4NWMnLFxuLy8gICAgICAgICAnWC1SYXBpZEFQSS1Ib3N0JzogJ21vdmllc21pbmlkYXRhYmFzZS5wLnJhcGlkYXBpLmNvbSdcbi8vICAgICAgIH1cbi8vICAgICB9O1xuICBcbi8vICAgICB0cnkge1xuLy8gICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuLy8gICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuLy8gICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4vLyAgICAgfVxuLy8gICB9XG5cblxuZXhwb3J0IGRlZmF1bHQgRXhhbXBsZTtcblxuIl0sIm5hbWVzIjpbIkV4YW1wbGUiLCJjb25zdHJ1Y3RvciIsImh0bWxFbGVtZW50IiwiaW5uZXJIVE1MIiwiaGFuZGxlQ2xpY2siLCJiaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoaWxkcmVuIiwiaW5uZXJUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/example.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0cHJvamVjdC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;